# use for build in docker
# env = { CROSS_CONTAINER_IN_CONTAINER = true }

[tasks.ci]
dependencies = ["setup-mihomo", "ci-flow"]
script = ["rm mihomo", "rm Doc/clash_test/cache.db"]

[tasks.ci.windows]
# ignore this shit
dependencies = []
script = ""

[tasks.setup-mihomo.windows]
script_runner = "pwsh"
script_extension = "ps1"
script = '''
    curl --output mihomo.zip -L https://github.com/MetaCubeX/mihomo/releases/download/v1.18.8/mihomo-windows-amd64-v1.18.8.zip
    7z x mihomo.zip
    mihomo-windows-amd64.exe -d Doc/clash_test -f Doc/clash_test/config.yaml &
'''
[tasks.setup-mihomo.linux]
script = '''
    curl --output mihomo.gz -L https://github.com/MetaCubeX/mihomo/releases/download/v1.18.8/mihomo-linux-amd64-v1.18.8.gz
    gunzip mihomo.gz
    chmod +x mihomo
    nohup ./mihomo -d Doc/clash_test -f Doc/clash_test/config.yaml > /dev/null &
'''


[tasks.release_amd64.windows]
dependencies = ["clear-artifacts", "amd64", "upx"]

[tasks.release_amd64.linux]
dependencies = ["clear-artifacts", "amd64", "upx"]

[tasks.release_arm64.linux]
dependencies = ["clear-artifacts", "arm64", "upx"]

[tasks.create-artifacts]
private = true
script_runner = "@shell"
ignore_errors = true
script = ["mkdir artifacts"]

[tasks.clear-artifacts]
private = true
script_runner = "@shell"
ignore_errors = true
script = ["rm -r artifacts"]

[tasks.build_deb.linux]
# install_crate = "cargo-deb"
dependencies = ["create-artifacts"]
script = """
    cargo deb --locked 
    cp target/debian/*.deb artifacts/clashtui.linux.amd64.deb
"""

[tasks.arm64.linux]
# install_crate = "cross"
dependencies = ["create-artifacts"]
script = '''
    cross build --locked --target=aarch64-unknown-linux-musl
    cross build --locked --release --target=aarch64-unknown-linux-musl
    cp target/aarch64-unknown-linux-musl/release/clashtui artifacts/clashtui.linux.arm64.release
    cp target/aarch64-unknown-linux-musl/debug/clashtui artifacts/clashtui.linux.arm64.debug
'''

[tasks.amd64.linux]
dependencies = ["create-artifacts"]
script = '''
    cross build --locked --target=x86_64-unknown-linux-musl
    cross build --locked --release --target=x86_64-unknown-linux-musl
    cp target/x86_64-unknown-linux-musl/release/clashtui artifacts/clashtui.linux.amd64.release
    cp target/x86_64-unknown-linux-musl/debug/clashtui artifacts/clashtui.linux.amd64.debug
'''

[tasks.amd64.windows]
dependencies = ["create-artifacts"]
script_runner = "@shell"
script = '''
    cargo build --locked
    cargo build --locked --release
    cp target/release/clashtui.exe artifacts/clashtui.windows.release.exe
    cp target/debug/clashtui.exe artifacts/clashtui.windows.debug.exe
'''

[tasks.upx.linux]
script = '''
    chmod +x artifacts/*.release artifacts/*.debug
    curl -OL https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-amd64_linux.tar.xz
    tar -xf upx-4.2.4-amd64_linux.tar.xz
    rm upx-4.2.4-amd64_linux.tar.xz
    cp ./upx-4.2.4-amd64_linux/upx .
    rm -r ./upx-4.2.4-amd64_linux
    ./upx artifacts/*.release artifacts/*.debug
    rm upx
'''

[tasks.upx.windows]
script_runner = "@shell"
script = '''
    curl -OL https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip
    tar -xf upx-4.2.4-win64.zip
    cp ./upx-4.2.4-win64/upx.exe .
    rm -r ./upx-4.2.4-win64
    upx.exe artifacts/*.exe
    rm upx.exe
'''
